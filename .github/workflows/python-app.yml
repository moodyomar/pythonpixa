name: Python application

on:
  push:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python3 --version
        python3 -m pip install --upgrade pip
        pip install -r requirments.txt
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Increment Semantic Version
      id: bump_version
      uses: christian-draeger/increment-semantic-version@1.0.2
      with:
        current-version: '1.1.0'
        version-fragment: 'feature'

    - name: Build Docker Image
      run: |
        docker build -t ${{secrets.DOCKERHUB_USERNAME}}/py-pixa-app:v${{ steps.bump_version.outputs.next-version }}  .
        docker run -d --name testing-webapp -p 80:3000 ${{secrets.DOCKERHUB_USERNAME}}/py-pixa-app:v${{ steps.bump_version.outputs.next-version }}

    - name: Run Unit Tests
      run: docker exec testing-webapp python3 -m unittest smokeTest

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: '${{secrets.DOCKERHUB_USERNAME}}'
        password: '${{secrets.DOCKERHUB_TOKEN}}'

    - name: Build and push to docker hub
      run: |
        docker push ${{secrets.DOCKERHUB_USERNAME}}/py-pixa-app:v${{ steps.bump_version.outputs.next-version }}
